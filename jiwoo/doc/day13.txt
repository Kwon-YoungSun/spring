# AOP(Aspect Oriented Programming)

용어 정리
	
	1. JoinPoint
		: 클라이언트가 호출하는 모든 메소드(함수). 모든 함수를 JoinPoint라고 생각하면 된다.
		
	2. Pointcut
		: 걸러낸 조인포인트...
		
	3. Advice
		: 횡단 관심사에 해당하는 공통 기능의 코드를 의미
			독립된 클래스의 메소드로 작성
			작동시점은 스프링설정 또는 어노테이션으로 결정
				
				before
				after
				after-returning
				after-throwing
				around
				
	4. Weaving
		:  횡단 관심 메서드가 삽입되는 과정을 의미
			위빙을 통해서 메소드를 수정하지 않고 횡단 관심사에 해당하는 기능을 추가 또는 변경 가능
			
			
	5. Aspect || Advisor
		: Aspect - Pointcut + Advice
			==> 어떤 포인트 컷에서 어드바이스 메소드를 실행할지를 결정
			
------------------------------------------------------------------------------------

Pointcut 표현식
	
	"execution(* com.increpas.cls.controller.Member.loginProc(..))"
		
		1.
		* 		: 함수의 반환값이 모든 타입
		void	: 함수의 반환값 타입이 void인 모든 메소드
		!void	: 반환값 타입이 void가 아닌 모든 메소드
		
		2.
		com.increpas.cls.controller.Member
			: 패키지 경로
			
		
		com.increpas.cls.controller..
			: 위 경로 시작하는 모든 패키지
			
		com.increpas.cls.controller..test1
			: 경로중 마지막 패키지가 test1인 패키지를 선택
		
		3. 클래스명
			Member	: Member 클래스
			Member*	: Member로 시작하는 클래스
			*Test	: 클래스이름이 Test로 끝나는 클래스
			Member+	: Member를 상속받은 모든 클래스
			
		4. 메소드명
			*			: 모든 함수
			get*(..)	: get으로 시작하는 모든함수
			
-------------------------------------------------------------------------------
실습문제 ]
	
	게시판에 글쓰기 작업이 완료되면
	로그를 남기는 작업을 AOP 를 이용해서 처리하세요...!
